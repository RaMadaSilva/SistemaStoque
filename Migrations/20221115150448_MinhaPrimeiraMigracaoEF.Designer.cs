// <auto-generated />
using System;
using GestãoDeEstoque.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestãoDeEstoque.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20221115150448_MinhaPrimeiraMigracaoEF")]
    partial class MinhaPrimeiraMigracaoEF
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GestãoDeEstoque.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR(500)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("GestãoDeEstoque.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)")
                        .HasColumnName("Nome");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(120)
                        .HasColumnType("NVARCHAR(120)")
                        .HasDefaultValue("ANGOLA")
                        .HasColumnName("Pais");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor", (string)null);
                });

            modelBuilder.Entity("GestãoDeEstoque.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataExpiracao");

                    b.Property<DateTime>("DataFabrico")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataFabrico");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)")
                        .HasColumnName("Nome");

                    b.Property<double>("PrecoTotal")
                        .HasColumnType("FLOAT")
                        .HasColumnName("PrecoTotal");

                    b.Property<double>("PrecoUnitario")
                        .HasColumnType("FLOAT")
                        .HasColumnName("PrecoUnitario");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INT")
                        .HasColumnName("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("GestãoDeEstoque.Models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR(60)")
                        .HasColumnName("Funcao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Utilizador", (string)null);
                });

            modelBuilder.Entity("ProductoFornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("FornecedorId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProductoFornecedor");
                });

            modelBuilder.Entity("ProdutoUtilizadores", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId", "UtilizadorId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("ProdutoUtilizadores");
                });

            modelBuilder.Entity("GestãoDeEstoque.Models.Produto", b =>
                {
                    b.HasOne("GestãoDeEstoque.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ProductoFornecedor", b =>
                {
                    b.HasOne("GestãoDeEstoque.Models.Produto", null)
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProdutoFornecedor_FornecedorId");

                    b.HasOne("GestãoDeEstoque.Models.Fornecedor", null)
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProdutoForneccedor_ProdutoId");
                });

            modelBuilder.Entity("ProdutoUtilizadores", b =>
                {
                    b.HasOne("GestãoDeEstoque.Models.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProdutoUtilizador_ProdutoId");

                    b.HasOne("GestãoDeEstoque.Models.Utilizador", null)
                        .WithMany()
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProdutoUtilizadores_UtilizadorId");
                });

            modelBuilder.Entity("GestãoDeEstoque.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
